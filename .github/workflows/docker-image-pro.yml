name: Docker Image CI Pro
on:
  workflow_dispatch:
    inputs:
      address: 
        description: 'git repositories adress(http)' 
        required: true
        type: string
      tag:
        description: 'code version'
        required: false
        type: string
        default: 'none'
      # branch:
        # description: 'code branch'
        # required: false
        # type: string
        # default: 'none'
env:
  tag: ${{ inputs.tag }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - name: split image name
      run: |
        echo echo ${{ inputs.address }}|awk -F "/" '{print $NF}' | awk -F ".git" '{print "project_name=" $1}' >> "$GITHUB_ENV"
    - name: echo
      run: echo ${{ env.project_name }}
    - name: clone project
      run: git clone ${{ inputs.address }}
    - name: get tag
      if: inputs.tag == 'none'
      run: |
        echo ${{ env.project_name }}
        cd ${{ env.project_name }}
        git describe --abbrev=0 --tags | awk '{print "tag=" $1}' >> "$GITHUB_ENV"
    - name: checkout tag version
      run: |
        echo ${{ env.tag}}
        cd ${{ env.project_name }}
        git checkout -b ${{ env.tag}}
    - name: Build the Docker image
      run: |
        cd ${{ env.project_name }}
        docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/${{ env.project_name }}:${{ env.tag }}
    - name: login docker hub
      run: docker login -u=${{ secrets.DOCKER_USERNAME }} -p=${{ secrets.DOCKER_PASSWORD }}
    - name: push docker hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.project_name }}:${{ env.tag }}
    - name: override latest
      run: |
       docker tag ${{ secrets.DOCKER_USERNAME }}/${{ env.project_name }}:${{ env.tag }} ${{ secrets.DOCKER_USERNAME }}/${{ env.project_name }}:latest
       run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.project_name }}:latest
    
    
